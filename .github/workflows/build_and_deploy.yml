name: Build and Publish Python Package

on:
  release:
    types: [created]

jobs:

  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Build wheels
      run: |
        python setup.py bdist_wheel

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.os }}
        path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Download wheels
      uses: actions/download-artifact@v3
      with:
        path: ./dist

    - name: Extract wheels
      run: |
        mkdir wheels
        for artifact in ./dist/*; do
          cp -r $artifact/dist/*.whl ./wheels/
        done

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload wheels/*