name: Build and Publish Python Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.7'
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.12'
          - os: macos-latest
            python-version: '3.7'
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.9'
          - os: macos-latest
            python-version: '3.10'
          - os: macos-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.12'
          - os: windows-latest
            python-version: '3.7'
          - os: windows-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.12'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel cython twine

    - name: Build Wheel
      run: |
        python setup.py bdist_wheel

    - name: Repair Wheels (Linux only)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        docker run --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 bash -c "\
          cd /io/dist && \
          for whl in *linux_x86_64.whl; do \
            auditwheel repair $whl --plat manylinux2010_x86_64 -w /io/dist_repaired/ && \
            rm $whl; \
          done"
    
    - name: Prepare Artifacts
      run: |
        mkdir -p artifacts
        if [ -d dist_repaired ]; then
          mv dist_repaired/* artifacts/
        fi
        mv dist/* artifacts/

    - uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: artifacts/*

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Publish to PyPI
      run: |
        python -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
