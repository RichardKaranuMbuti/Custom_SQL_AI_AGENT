name: Build and Publish Python Package

on:
  push:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel cython
        shell: bash

      - name: Compile Cython modules
        run: |
          python setup.py build_ext
        shell: bash

      - name: Build wheels without source files
        run: |
          python setup.py bdist_wheel
        shell: bash

      - name: List contents of the wheel file
        run: |
          unzip -l dist/*.whl
        shell: bash

      - name: Upload wheels to Artifact Storage
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist/*.whl

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download wheels from Artifact Storage
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Unpack Artifacts and Move to Dist
        run: |
          mkdir -p dist
          find ./artifacts -name '*.zip' -exec unzip -o {} -d ./ \;
          find . -name '*.whl' -exec mv {} dist/ \;

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to PyPI with Verbose Output
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --verbose dist/*.whl
