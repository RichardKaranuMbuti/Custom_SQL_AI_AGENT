name: Build and Publish Python Package

on:
  push:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel cython
        shell: bash

      - name: Compile Cython modules
        run: |
          python setup.py build_ext --inplace
        shell: bash

      - name: Build wheels
        run: |
          python setup.py bdist_wheel
        shell: bash

      - name: Repair wheels (Linux only)
        if: runner.os == 'Linux'
        run: |
          pip install auditwheel
          mkdir -p wheelhouse
          for whl in ./dist/*.whl; do
            auditwheel repair $whl --plat manylinux2014_x86_64 -w wheelhouse/
          done
        shell: bash

      - name: Prepare wheels for upload
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            mv wheelhouse/* dist/
          fi
        shell: bash

      - name: Upload wheels to Artifact Storage
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist/*.whl

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download wheels from Artifact Storage
        uses: actions/download-artifact@v3
        with:
          name: wheels-${{ needs.build.result }}
          path: ./dist

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
